{"ast":null,"code":"var _jsxFileName = \"/Users/user/ReactProjects/udemy-react-app/src/components/Counter.js\",\n    _s = $RefreshSig$();\n\n// useSelector is a hook from react-redux that allows us to access a specific part of the store managed states.\nimport { useSelector, useDispatch } from 'react-redux';\nimport classes from './Counter.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Counter = () => {\n  _s();\n\n  /**\n   * useSelector takes in a function argument.\n   * The function arguement takes in an argument of the state and returns a part of that state.\n   *\n   * This will automatically set up a subscription for this component. The component will be automatically\n   * updated when the state in the store changes.\n   */\n  const counter = useSelector(state => state.counter); // useDispatch is a hook that returns a function\n\n  const dispatch = useDispatch();\n\n  const toggleCounterHandler = () => {};\n\n  const increment = () => {};\n\n  const decrement = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: classes.counter,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Redux Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.value,\n      children: counter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleCounterHandler,\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onclick: toggleCounterHandler,\n        children: \"Decrement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleCounterHandler,\n      children: \"Toggle Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Counter, \"kekweKlgGDYl7VGjQQ+BKXXb0Ho=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Counter;\nexport default Counter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"sources":["/Users/user/ReactProjects/udemy-react-app/src/components/Counter.js"],"names":["useSelector","useDispatch","classes","Counter","counter","state","dispatch","toggleCounterHandler","increment","decrement","value"],"mappings":";;;AAAA;AACA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,OAAP,MAAoB,sBAApB;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB;AACF;AACA;AACA;AACA;AACA;AACA;AACE,QAAMC,OAAO,GAAGJ,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACD,OAAhB,CAA3B,CARoB,CAUpB;;AACA,QAAME,QAAQ,GAAGL,WAAW,EAA5B;;AAEA,QAAMM,oBAAoB,GAAG,MAAM,CAAG,CAAtC;;AAEA,QAAMC,SAAS,GAAG,MAAM,CAEvB,CAFD;;AAIA,QAAMC,SAAS,GAAG,MAAM,CAAE,CAA1B;;AAIA,sBACE;AAAM,IAAA,SAAS,EAAEP,OAAO,CAACE,OAAzB;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAEF,OAAO,CAACQ,KAAxB;AAAA,gBAAgCN;AAAhC;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAEG,oBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAEA,oBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAOE;AAAQ,MAAA,OAAO,EAAEA,oBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAlCD;;GAAMJ,O;UAQYH,W,EAGCC,W;;;KAXbE,O;AAoCN,eAAeA,OAAf","sourcesContent":["// useSelector is a hook from react-redux that allows us to access a specific part of the store managed states.\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport classes from './Counter.module.css'\n\nconst Counter = () => {\n  /**\n   * useSelector takes in a function argument.\n   * The function arguement takes in an argument of the state and returns a part of that state.\n   *\n   * This will automatically set up a subscription for this component. The component will be automatically\n   * updated when the state in the store changes.\n   */\n  const counter = useSelector(state => state.counter)\n\n  // useDispatch is a hook that returns a function\n  const dispatch = useDispatch()\n\n  const toggleCounterHandler = () => { }\n  \n  const increment = () => {\n    \n  }\n  \n  const decrement = () => {}\n\n\n\n  return (\n    <main className={classes.counter}>\n      <h1>Redux Counter</h1>\n      <div className={classes.value}>{counter}</div>\n      <div>\n        <button onClick={toggleCounterHandler}>Increment</button>\n        <button onclick={toggleCounterHandler}>Decrement</button>\n      </div>\n      <button onClick={toggleCounterHandler}>Toggle Counter</button>\n    </main>\n  )\n}\n\nexport default Counter\n"]},"metadata":{},"sourceType":"module"}